Two Sum
===============================================================================================
1)Brute Force Approach

class Solution {
    public int[] twoSum(int[] nums, int target) {
        // Iterate through each element in the array
        for (int i = 0; i < nums.length; i++) {
            // Start the inner loop from the next element
            for (int j = i + 1; j < nums.length; j++) { // Increment j, not i
                // Check if the sum of the two elements equals the target
                if (nums[i] + nums[j] == target) {
                    return new int[]{i, j}; // Return the indices
                }
            }
        }
        
        return new int[]{}; // Return an empty array if no solution is found
    }
}
---------------------------------------------------------------------------------------
2) Using HashMap

import java.util.HashMap;
class Solution {
    public int[] twoSum(int[] nums, int target) {
        HashMap<Integer, Integer> map = new HashMap<>();
        
        for (int i = 0; i < nums.length; i++) {
            int complement = target - nums[i];
            if (map.containsKey(complement)) {
                return new int[]{map.get(complement), i}; // Return the indices
            }
            map.put(nums[i], i); // Store the number and its index
        }
        
        return new int[]{}; // Return an empty array if no solution is found
    }
}
